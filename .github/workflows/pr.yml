name: "PR Tests"
permissions: read-all

# Trigger for PR and merge to develop branch
on:
  push:
    branches: develop
  pull_request:
  workflow_dispatch:

env:
  CTEST_OUTPUT_ON_FAILURE: 1
  LAPACK_VERSION: 3.12.0
  PARALLEL: -j 2

jobs:
  format-checks:
    runs-on: ubuntu-latest
    name: clang-format check
    steps:
    - uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
    - uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0
      with:
        python-version: '3.10'
        cache: 'pip'
    - name: Install pre-commit
      run: pip install pre-commit
    - name: Run clang-format check
      run: pre-commit run --all-files --show-diff-on-failure --color always
  unit-tests:
    runs-on: ubuntu-latest
    # One runner for each domain
    strategy:
      matrix:
        include:
        - config: portBLAS
          domain: blas
          build_options: -DREF_BLAS_ROOT=${PWD}/lapack/install -DENABLE_PORTBLAS_BACKEND=ON -DENABLE_MKLCPU_BACKEND=OFF -DPORTBLAS_TUNING_TARGET=INTEL_CPU
        - config: portFFT
          domain: dft
          build_options: -DENABLE_PORTFFT_BACKEND=ON -DENABLE_MKLCPU_BACKEND=OFF
          test_options: -R 'DFT/CT/.*ComputeTests_in_place_COMPLEX.COMPLEX_SINGLE_in_place_buffer.sizes_8_batches_1*'
        - config: MKL BLAS
          domain: blas
          build_options: -DREF_BLAS_ROOT=${PWD}/lapack/install
        - config: MKL DFT
          domain: dft
        - config: MKL LAPACK
          domain: lapack
          build_options: -DREF_LAPACK_ROOT=${PWD}/lapack/install
        - config: MKL RNG
          domain: rng
    name: unit tests ${{ matrix.config }} CPU
    steps:
    - uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
    - name: Check if the changes affect this domain
      id: domain_check
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
      with:
        script: |
         const domainCheck = require('.github/scripts/domain-check.js')
         return domainCheck({github, context, domain: "${{ matrix.domain }}"})
    - name: Restore netlib from cache
      id: cache-lapack
      uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
      with:
        path: lapack/install
        key: lapack-${{ env.LAPACK_VERSION }}
    - name: Install netlib
      if: steps.domain_check.outputs.result == 'true' && steps.cache-lapack.outputs.cache-hit != 'true'
      run: |
        curl -sL https://github.com/Reference-LAPACK/lapack/archive/refs/tags/v${LAPACK_VERSION}.tar.gz | tar zx
        SHARED_OPT="lapack-${LAPACK_VERSION} -DBUILD_SHARED_LIBS=on -DCBLAS=on -DLAPACKE=on -DCMAKE_INSTALL_PREFIX=${PWD}/lapack/install"
        # 32 bit int
        cmake ${SHARED_OPT} -B lapack/build32 
        cmake --build lapack/build32 ${PARALLEL} --target install
        # 64 bit int
        cmake ${SHARED_OPT} -DBUILD_INDEX64=on -B lapack/build64
        cmake --build lapack/build64 ${PARALLEL} --target install
    - name: Install oneapi
      if: steps.domain_check.outputs.result == 'true'
      uses: rscohn2/setup-oneapi@2ad0cf6b74bc2426bdcee825cf88f9db719dd727 # v0.1.0
      with:
        components: |
          icx@2024.1.0
          mkl@2024.1.0
    - name: Configure/Build for a domain
      if: steps.domain_check.outputs.result == 'true'
      run: |
        source /opt/intel/oneapi/setvars.sh
        cmake -DTARGET_DOMAINS=${{ matrix.domain }} -DENABLE_MKLGPU_BACKEND=off -DCMAKE_VERBOSE_MAKEFILE=on ${{ matrix.build_options }} -B build
        cmake --build build ${PARALLEL}
    - name: Run tests
      if: steps.domain_check.outputs.result == 'true'
      run: |
        source /opt/intel/oneapi/setvars.sh
        ctest --test-dir build ${{ matrix.test_options }}
